class Solution {
public:
    string getPattern(string s)
    {
        vector<int>hashArr(26,0);
        for(int i = 0; i < s.size(); i++)
        {
            hashArr[s[i]-'a']++;
        }
        string str = "";
        for(int i = 0; i < 26; i++)
        {
            if(hashArr[i] != 0)
                 str += "#" + to_string(hashArr[i]);
        }
        return str;
    }
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        unordered_map<string, vector<string>>mpp;
        for(string s : strs)
        {
            mpp[getPattern(s)].push_back(s);
        }
        vector<vector<string>>result;
        for(auto it : mpp)
        {
            result.push_back(it.second);
        }
        return result;
    }
};