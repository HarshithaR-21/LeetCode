class Solution {
public:
    bool binarySearch(vector<int> &matrix, int target)
    {
        int n = matrix.size();
        int low = 0;
        int high = n-1;
        while(low <= high)
        {
            int mid = (low+high)/2;
            if(matrix[mid] == target)
                return true;
            else if(matrix[mid] < target)
                low = mid + 1;
            else
                high = mid - 1;
        }
        return false;
    }
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n = matrix.size();
        int m = matrix[0].size();
        bool res;
        if(target > matrix[n-1][m-1])
            return false;
        for(int i = 0; i < n; i++)
        {
            if(target >= matrix[i][0] && target <= matrix[i][m-1])
            {
                res = binarySearch(matrix[i], target);
            }
        }
        return res;
    }
};