
def f(bloomDay, m, k, day):
    count = 0
    no_of_bouquets = 0
    n = len(bloomDay)
    for i in range(n):
        if(bloomDay[i] <= day):
            count += 1
        else:
            no_of_bouquets += count // k
            count = 0
    no_of_bouquets += count // k
    if no_of_bouquets >= m:
        return True
    else:
        return False
class Solution(object):
    def minDays(self, bloomDay, m, k):
        """
        :type bloomDay: List[int]
        :type m: int
        :type k: int
        :rtype: int
        """
        n = len(bloomDay)
        val = m*k
        if val > n:
            return -1
        low = min(bloomDay)
        high = max(bloomDay)
        while(low <= high):
            mid = (low+high)//2
            if f(bloomDay, m, k, mid):
                high = mid -1
            else:
                low = mid+1
        return low
        