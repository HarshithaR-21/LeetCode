def firstOccurence(nums, target):
    n = len(nums)
    start = -1
    low = 0
    high = n-1
    while(low <= high):
        mid = (low+high)//2
        if(nums[mid] == target):
            start = mid
            high = mid-1
        elif(nums[mid] < target):
            low = mid + 1
        else:
            high = mid - 1
    return start
def lastOccurence(nums,target):
    n = len(nums)
    end = -1
    low = 0
    high = n-1

    while(low <= high):
        mid = (low+high)//2
        if(nums[mid] == target):
            end = mid
            low = mid+1
        elif(nums[mid] < target):
            low = mid+1
        else:
            high = mid - 1
                
    
    return end
        
class Solution(object):
    def searchRange(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        start = firstOccurence(nums, target)
        if(start == -1):
            return [-1,-1]
        end = lastOccurence(nums, target)
        return [start, end]
        